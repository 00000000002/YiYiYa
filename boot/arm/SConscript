# coding:utf-8
# *******************************************************************
# * Copyright 2021-2080 evilbinary
# * 作者: evilbinary on 01/01/20
# * 邮箱: rootdebug@163.com
# ********************************************************************
import os

Import('env')               

linkflags='-nostdlib -nostartfiles -T boot/arm/link.ld'
cflags= '$CFLAGS -I. -Iinclude'

source=[ 
    'boot.o',
    'init.c',
    'config.h'
    ]

boot_source= ['boot_'+env['ARCH']+'.s']

if env.get('MYLIB'):
    source.append(env.get('MYLIB'))


if env['PLATFORM']=='stm32f4xx':
    env.GenerateKernelSize('config.h',[])
    linkflags='-nostdlib -nostartfiles -T boot/arm/link-stm32f4xx.ld'
    source=['init_armv7.c']
    boot_source=['boot_armv7.s',]
    cflags+='-DKSTART'
else:
    env.GenerateKernelSize('config.h',['../../init/kernel'])

env.Object('boot.o',boot_source,ASFLAGS='')

env.Program(target ='init.elf', source = source,
    CFLAGS=cflags,
    LINKFLAGS= linkflags)
env.Objcopy('init.bin','init.elf',OBJCOPYFLAGS='-O binary -S --strip-debug')
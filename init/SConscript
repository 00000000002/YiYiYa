# coding:utf-8
# *******************************************************************
# * Copyright 2021-2080 evilbinary
# * 作者: evilbinary on 01/01/20
# * 邮箱: rootdebug@163.com
# ********************************************************************
import os
import platform 
plt = platform.system()

Import('env')

linkflags=' $LINKFLAGS -Xlinker '+env.get('LINKLD')

libs=[
    '../kernel/libyiyiya.a',
    '../arch/libarch.a',
    '../modules/libmodules.a',
    '../platform/libplatform.a',
    '../libs/libarchcommon/libarchcommon.a',
    '../libs/libalgorithm/libalgorithm.a',
    '../libs/libkernel/libkernel.a'
]

kernel=[
    'main.c',
    'module.c',
    'shell.c',
    'monitor.c',
    'test.c'
    ]


if env.get('ARCHTYPE')=='xtensa':
    # libs.append('../app/libgui/libgui.a')
    # libs.append('../libs/libc/libc.a')
    pass
elif env.get('ARCHTYPE')=='arm':
    if env.get('ARCH')=='armv7':
        kernel.append('../boot/arm/boot.o')
        kernel.append('../boot/arm/init.o')
        pass
    else:
        pass
if env.get('MYLIB'):
    libs.append(env.get('MYLIB'))

env.Program('kernel.elf',kernel+libs,LINKFLAGS = linkflags)

env.Objcopy('kernel','kernel.elf',OBJCOPYFLAGS='-S')
env.Objcopy('kernel.dbg','kernel.elf',OBJCOPYFLAGS='--only-keep-debug')
# env.Objcopy('kernel.hex','kernel.elf',OBJCOPYFLAGS='-S -O ihex')
env.Objcopy('kernel.bin','kernel.elf',OBJCOPYFLAGS='-S -O binary')
